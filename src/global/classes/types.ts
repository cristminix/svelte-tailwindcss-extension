export interface MessageEventInterface {
  name: string
  data?: any
}
export interface CourseInfoLegacyInterface {
  title: string
  duration: string
  sourceCodeRepository: string
  subtitle: string
  slug: string
  entityUrn: string
  githubCodespace: string
  exerciseFiles: string
  description: string
}
export type JSONValue = string | number | boolean | null | JSONArray | JSONObject

interface JSONObject {
  [key: string]: JSONValue
}

interface JSONArray extends Array<JSONValue> {}
export type TM3Rec = JSONValue

export interface ExerciseFileInterface {
  name: string
  sizeInBytes: number
  url: string
}
export interface AuthorInterface {
  name: string
  biography: string
  shortBiography: string
  slug: string
  url?: string
}
export interface CourseInterface {
  title: string
  slug: string
  description: string
  githubCodespace: string
  urn: string
}
export interface SectionInterface {
  title: string
  slug: string
  itemStars: string[]
}
export interface StreamLocationInterface {
  fmt: string
  url: string
  expiresAt: number
}
export interface ThumbnailInterface {
  url: string
  size: string
  expiresAt: number
}
export interface TocInterface {
  title: string
  slug: string
  streamLocations: StreamLocationInterface[]
}
export interface TranscriptInterface {
  lang: string
  fmt: string
  url: string
  autoGenerated: boolean
}
export interface CourseInfoInterface {
  title: string
  duration: string
  sourceCodeRepository: string
  subtitle: string
  slug: string
  urn: string
  githubCodespace: string
  exerciseFiles: ExerciseFileInterface[]
  description: string
  authors: AuthorInterface[]
  sections: SectionInterface[]
}
